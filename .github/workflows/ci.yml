name: CI

on:
  push:
    branches:
      - master
    tags-ignore:
      - "**"
    paths-ignore:
      - .gitignore
      - LICENSE
      - "**.md"
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        required: true
        default: true
        description: "Is release?"

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: |
          yarn
      - name: Lint
        run: |
          yarn lint:prettier
          yarn lint:eslint
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    needs: lint

    env:
      GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
      GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: |
          yarn
      - name: Build
        run: |
          yarn build --env=analyze=yes
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      - name: Get current time
        if: ${{ github.event.inputs.release }}
        uses: josStorer/get-current-time@v2
        id: time
        with:
          format: "YYYYMMDDHHmm"
          utcOffset: "+09:00"
      - name: Release
        if: ${{ github.event.inputs.release && github.ref == 'refs/heads/master' }}
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.plugin.*
          name: ${{ steps.time.outputs.formattedTime }}
          tag_name: ${{ steps.time.outputs.formattedTime }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
