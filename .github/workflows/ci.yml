name: CI

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
    paths-ignore:
      - .gitignore
      - LICENSE
      - "**.md"
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        required: true
        default: true

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: |
          yarn
      - name: Lint
        run: |
          yarn lint:prettier
          yarn lint:eslint
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    needs: lint

    env:
      GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
      GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: |
          yarn
      - name: Build
        run: |
          yarn build --env=analyze=yes
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - name: Get Time
        if: ${{ github.event.inputs.release }}
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 9
          format: "YYYYMMDDHHmm"
      - name: Release
        if: ${{ github.event.inputs.release && github.ref == 'refs/heads/master' }}
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.plugin.*
          name: ${{ steps.time.outputs.time }}
          tag_name: ${{ steps.time.outputs.time }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
